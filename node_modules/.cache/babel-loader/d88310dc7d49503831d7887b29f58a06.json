{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bruker\\\\OneDrive\\\\Documents\\\\GitHub\\\\Added_typeScript_to_restCountries_app\\\\src\\\\componetsReact\\\\EachCountryDetails.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { Card, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EachCountryDetails() {\n  _s();\n\n  const {\n    countries\n  } = useSelector(state => state);\n  const {\n    name\n  } = useParams();\n  const eachCountry = countries.filter(country => country.name.common === name);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      width: \"18rem\"\n    },\n    children: eachCountry.map(country => {\n      let languages = [];\n\n      for (var key in country.languages) {\n        languages.push(country.languages[key]);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: \"Country Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n            children: [\"Country Name:\", country.name.common]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"country-flag\",\n              src: country.flags.svg,\n              alt: `Country Flag ${country.name.common}`,\n              style: {\n                width: \"13rem\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\" Population: \", country.population]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\" Capital: \", country.capital]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\" Location: \", country.region]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\" Subregion: \", country.subregion]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\" Languages: \", languages.join(\", \")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn\",\n          variant: \"info\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/cart\",\n            children: \"Back to Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn\",\n          variant: \"info\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Back to Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EachCountryDetails, \"7ln7LSEZxsuYTsb7MNySSrbldvk=\", false, function () {\n  return [useSelector, useParams];\n});\n\n_c = EachCountryDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"EachCountryDetails\");","map":{"version":3,"sources":["C:/Users/Bruker/OneDrive/Documents/GitHub/Added_typeScript_to_restCountries_app/src/componetsReact/EachCountryDetails.tsx"],"names":["React","useParams","useSelector","Card","Button","Link","EachCountryDetails","countries","state","name","eachCountry","filter","country","common","width","map","languages","key","push","flags","svg","population","capital","region","subregion","join"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAAUC,WAAV,QAA6B,aAA7B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAKA,eAAe,SAASC,kBAAT,GAA8B;AAAA;;AAG3C,QAAM;AAACC,IAAAA;AAAD,MAAcL,WAAW,CAAEM,KAAD,IAAwBA,KAAzB,CAA/B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWR,SAAS,EAA1B;AAEA,QAAMS,WAAW,GAAGH,SAAS,CAACI,MAAV,CACjBC,OAAD,IAAaA,OAAO,CAACH,IAAR,CAAaI,MAAb,KAAwBJ,IADnB,CAApB;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEK,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA,cACGJ,WAAW,CAACK,GAAZ,CAAiBH,OAAD,IAAa;AAC5B,UAAII,SAAS,GAAG,EAAhB;;AACA,WAAK,IAAIC,GAAT,IAAgBL,OAAO,CAACI,SAAxB,EAAmC;AACjCA,QAAAA,SAAS,CAACE,IAAV,CAAeN,OAAO,CAACI,SAAR,CAAkBC,GAAlB,CAAf;AACD;;AACD,0BACE;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,aAAhB;AAAA,kCACE,QAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAGE,QAAC,IAAD,CAAM,KAAN;AAAA,wCAA0BL,OAAO,CAACH,IAAR,CAAaI,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,IAAD,CAAM,IAAN;AAAA,mCACE;AACE,cAAA,SAAS,EAAC,cADZ;AAEE,cAAA,GAAG,EAAED,OAAO,CAACO,KAAR,CAAcC,GAFrB;AAGE,cAAA,GAAG,EAAG,gBAAeR,OAAO,CAACH,IAAR,CAAaI,MAAO,EAH3C;AAIE,cAAA,KAAK,EAAE;AAAEC,gBAAAA,KAAK,EAAE;AAAT;AAJT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF,eAYE,QAAC,IAAD,CAAM,IAAN;AAAA,wCAAyBF,OAAO,CAACS,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZF,eAaE,QAAC,IAAD,CAAM,IAAN;AAAA,qCAAsBT,OAAO,CAACU,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF,eAcE,QAAC,IAAD,CAAM,IAAN;AAAA,sCAAuBV,OAAO,CAACW,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF,eAeE,QAAC,IAAD,CAAM,IAAN;AAAA,uCAAwBX,OAAO,CAACY,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF,eAgBE,QAAC,IAAD,CAAM,IAAN;AAAA,uCAAwBR,SAAS,CAACS,IAAV,CAAe,IAAf,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAkBU,GAlBV,eAmBE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,KAAlB;AAAwB,UAAA,OAAO,EAAC,MAAhC;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAnBF,EAqBY,GArBZ,eAsBE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,KAAlB;AAAwB,UAAA,OAAO,EAAC,MAAhC;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AA4BD,KAjCA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD;;GAhDuBnB,kB;UAGFJ,W,EACHD,S;;;KAJKK,kB","sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {  useSelector } from \"react-redux\";\nimport { Card, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\n\nimport { InitialState } from \"../redux/reducers/countryReducer\";\n\nexport default function EachCountryDetails() {\n  \n \n  const {countries} = useSelector((state:InitialState) => state);\n  const { name } = useParams();\n \n  const eachCountry = countries.filter(\n    (country) => country.name.common === name\n  );\n\n  return (\n    <Card style={{ width: \"18rem\" }}>\n      {eachCountry.map((country) => {\n        let languages = [];\n        for (var key in country.languages) {\n          languages.push(country.languages[key]);\n        }\n        return (\n          <div>\n            <Card className=\"text-center\">\n              <Card.Header>Country Details</Card.Header>\n\n              <Card.Title>Country Name:{country.name.common}</Card.Title>\n              <Card.Text>\n                <img\n                  className=\"country-flag\"\n                  src={country.flags.svg}\n                  alt={`Country Flag ${country.name.common}`}\n                  style={{ width: \"13rem\" }}\n                />\n              </Card.Text>\n              <Card.Text> Population: {country.population}</Card.Text>\n              <Card.Text> Capital: {country.capital}</Card.Text>\n              <Card.Text> Location: {country.region}</Card.Text>\n              <Card.Text> Subregion: {country.subregion}</Card.Text>\n              <Card.Text> Languages: {languages.join(\", \")}</Card.Text>\n            </Card>{\" \"}\n            <Button className=\"btn\" variant=\"info\">\n              <Link to=\"/cart\">Back to Cart</Link>\n            </Button>{\" \"}\n            <Button className=\"btn\" variant=\"info\">\n              <Link to=\"/\">Back to Home</Link>\n            </Button>\n          </div>\n        );\n      })}\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
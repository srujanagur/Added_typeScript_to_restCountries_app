{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bruker\\\\OneDrive\\\\Documents\\\\GitHub\\\\Added_typeScript_to_restCountries_app\\\\src\\\\componetsReact\\\\CountriesTableReact.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { BsFillCartCheckFill } from \"react-icons/bs\";\nimport { fetchCountries } from \"../redux/actions\";\nimport { searchForKeyword } from \"../redux/actions\"; // import { searchByName } from \"../redux/actions\";\n\nimport { addToCart } from \"../redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CountriesTableReact() {\n  _s();\n\n  const {\n    countries\n  } = useSelector(state => state);\n  const {\n    cart\n  } = useSelector(state => state);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchCountries());\n  }, [dispatch]);\n\n  const handleChange = evt => {\n    dispatch(searchForKeyword(evt.target.value));\n  }; //  type rootButtonStatus=ReturnType<typeof getbuttonStatus>\n  // const getbuttonStatus = (country:Country, cart:Country[]) => {\n  //   const matchedCountry = country.name.common;\n  // let found = false;\n  // return(\n  // cart.forEach((a) => (\n  //   (a.name.common === matchedCountry)?\"true\":\"\"\n  // )))\n  // }\n  //   if (a.name.common === matchedCountry) {\n  //     found = true;\n  //   }\n  //   return \"true\";\n  // });\n  // if (found === true) {\n  //   return \"true\";\n  // } else {\n  //   return \"\";\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"header-search\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for country\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      size: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Flag\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Population\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Language\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Region\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/cart\",\n              children: /*#__PURE__*/_jsxDEV(BsFillCartCheckFill, {\n                size: \"2.5rem\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), Object.keys(cart).length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: countries.map(country => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: country.flags.svg,\n              alt: \"\",\n              width: \"50px\",\n              height: \"50px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/detail/${country.name.common}`,\n              children: country.name.common\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: country.population\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: country.languages ? Object.entries(country.languages).map(_ref => {\n                let [key] = _ref;\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: country.languages[key]\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 23\n                }, this);\n              }) : /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"No Languages\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: country.region\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(Button // disabled={getbuttonStatus(country,cart)}\n            , {\n              onClick: () => dispatch(addToCart(country)),\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, country.name.common, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CountriesTableReact, \"w587fG3D6rc3OVHKy6n8Q0zDhLY=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = CountriesTableReact;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountriesTableReact\");","map":{"version":3,"sources":["C:/Users/Bruker/OneDrive/Documents/GitHub/Added_typeScript_to_restCountries_app/src/componetsReact/CountriesTableReact.tsx"],"names":["React","Table","Link","useDispatch","useSelector","useEffect","Button","BsFillCartCheckFill","fetchCountries","searchForKeyword","addToCart","CountriesTableReact","countries","state","cart","dispatch","handleChange","evt","target","value","Object","keys","length","map","country","flags","svg","name","common","population","languages","entries","key","region"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,mBAAT,QAAoC,gBAApC;AAEA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,gBAAT,QAAiC,kBAAjC,C,CACA;;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAOA,eAAe,SAASC,mBAAT,GAA+B;AAAA;;AAC5C,QAAM;AAACC,IAAAA;AAAD,MAAcR,WAAW,CAAES,KAAD,IAAwBA,KAAzB,CAA/B;AACA,QAAM;AAACC,IAAAA;AAAD,MAASV,WAAW,CAAES,KAAD,IAAwBA,KAAzB,CAA1B;AAGA,QAAME,QAAQ,GAAGZ,WAAW,EAA5B;AACAE,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACP,cAAc,EAAf,CAAR;AACD,GAFQ,EAEN,CAACO,QAAD,CAFM,CAAT;;AAIA,QAAMC,YAAY,GAAIC,GAAD,IAA6C;AAChEF,IAAAA,QAAQ,CAACN,gBAAgB,CAACQ,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAjB,CAAR;AACD,GAFD,CAV4C,CAc5C;AACA;AACA;AAEE;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAGF,sBACE;AAAA,4BACE;AAAO,MAAA,OAAO,EAAC,eAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,oBAFd;AAGE,MAAA,QAAQ,EAAEH;AAHZ;AAAA;AAAA;AAAA;AAAA,YAJF,eAUE,QAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAA8B,MAAA,IAAI,EAAC,IAAnC;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAA,uBACG,GADH,eAEE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAE,OAAV;AAAA,qCACE,QAAC,mBAAD;AAAqB,gBAAA,IAAI,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFF,EAKGI,MAAM,CAACC,IAAP,CAAYP,IAAZ,EAAkBQ,MALrB;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAiBE;AAAA,kBACGV,SAAS,CAACW,GAAV,CAAeC,OAAD,iBACb;AAAA,kCACE;AAAA,mCACE;AACE,cAAA,GAAG,EAAEA,OAAO,CAACC,KAAR,CAAcC,GADrB;AAEE,cAAA,GAAG,EAAC,EAFN;AAGE,cAAA,KAAK,EAAC,MAHR;AAIE,cAAA,MAAM,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAG,WAAUF,OAAO,CAACG,IAAR,CAAaC,MAAO,EAAzC;AAAA,wBACGJ,OAAO,CAACG,IAAR,CAAaC;AADhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAVF,eAgBE;AAAA,sBAAKJ,OAAO,CAACK;AAAb;AAAA;AAAA;AAAA;AAAA,kBAhBF,eAiBE;AAAA,mCACE;AAAA,wBACGL,OAAO,CAACM,SAAR,GACCV,MAAM,CAACW,OAAP,CAAeP,OAAO,CAACM,SAAvB,EAAkCP,GAAlC,CAAsC;AAAA,oBAAC,CAACS,GAAD,CAAD;AAAA,oCACpC;AAAA,4BAAeR,OAAO,CAACM,SAAR,CAAkBE,GAAlB;AAAf,mBAASA,GAAT;AAAA;AAAA;AAAA;AAAA,wBADoC;AAAA,eAAtC,CADD,gBAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAjBF,eA6BE;AAAA,sBAAKR,OAAO,CAACS;AAAb;AAAA;AAAA;AAAA;AAAA,kBA7BF,eA8BE;AAAA,oCAEE,QAAC,MAAD,CACE;AADF;AAEE,cAAA,OAAO,EAAE,MAAMlB,QAAQ,CAACL,SAAS,CAACc,OAAD,CAAV,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAOY,GAPZ;AAAA;AAAA;AAAA;AAAA;AAAA,kBA9BF;AAAA,WAASA,OAAO,CAACG,IAAR,CAAaC,MAAtB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2ED;;GAjHuBjB,mB;UACFP,W,EACLA,W,EAGED,W;;;KALKQ,mB","sourcesContent":["import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { BsFillCartCheckFill } from \"react-icons/bs\";\n\nimport { fetchCountries } from \"../redux/actions\";\nimport { searchForKeyword } from \"../redux/actions\";\n// import { searchByName } from \"../redux/actions\";\nimport { addToCart } from \"../redux/actions\";\n\n\nimport { Country } from \"../types\";\nimport {InitialState} from \"../redux/reducers/countryReducer\";\n\n\nexport default function CountriesTableReact() {\n  const {countries} = useSelector((state:InitialState) => state);\n  const {cart} = useSelector((state:InitialState) => state);\n  \n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchCountries());\n  }, [dispatch]);\n\n  const handleChange = (evt:React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(searchForKeyword(evt.target.value));\n  };\n \n  //  type rootButtonStatus=ReturnType<typeof getbuttonStatus>\n  // const getbuttonStatus = (country:Country, cart:Country[]) => {\n  //   const matchedCountry = country.name.common;\n\n    // let found = false;\n    // return(\n    // cart.forEach((a) => (\n\n    //   (a.name.common === matchedCountry)?\"true\":\"\"\n    // )))\n    // }\n    //   if (a.name.common === matchedCountry) {\n    //     found = true;\n    //   }\n    //   return \"true\";\n    // });\n\n    // if (found === true) {\n    //   return \"true\";\n    // } else {\n    //   return \"\";\n    // }\n  \n\n  return (\n    <div>\n      <label htmlFor=\"header-search\">\n        <h4>Search</h4>\n      </label>\n      <input\n        type=\"text\"\n        placeholder=\"Search for country\"\n        onChange={handleChange}\n      />\n{/* <button onClick={() => dispatch(searchByName(country))}>sort</button> */}\n      <Table striped bordered hover size=\"sm\">\n        <thead>\n          <tr>\n            <th>Flag</th>\n            <th>Name</th>\n            <th>Population</th>\n            <th>Language</th>\n            <th>Region</th>\n            <th>\n              {\" \"}\n              <Link to={\"/cart\"}>\n                <BsFillCartCheckFill size=\"2.5rem\" />\n              </Link>\n              {Object.keys(cart).length}\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {countries.map((country:Country) => (\n            <tr key={country.name.common}>\n              <td>\n                <img\n                  src={country.flags.svg}\n                  alt=\"\"\n                  width=\"50px\"\n                  height=\"50px\"\n                />\n              </td>\n              \n              <td>\n                <Link to={`/detail/${country.name.common}`}>\n                  {country.name.common}\n                </Link>\n                \n              </td>\n              <td>{country.population}</td>\n              <td>\n                <ul>\n                  {country.languages ? (\n                    Object.entries(country.languages).map(([key]) => (\n                      <li key={key}>{country.languages[key]}</li>\n                    ))\n                  ) : (\n                    <li>No Languages</li>\n                  )}\n                </ul>\n              </td>\n\n              <td>{country.region}</td>\n              <td>\n               \n                <Button\n                  // disabled={getbuttonStatus(country,cart)}\n                  onClick={() => dispatch(addToCart(country))}\n                >\n                  Add\n                </Button>{\" \"}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}